#!/bin/bash

########################################################################
# Packages and extensions to install by default
########################################################################

PACKAGES=(
    psutil
    numpy
    matplotlib
    scipy
    sympy
    ipython
    jupyter
    jupyterlab
    ipywidgets
    sjk
    PySingular
    jupyter_kernel_singular
    appmode
    # jupyterlab_latex
)

LABEXTENSIONS=(
    "@jupyter-widgets/jupyterlab-manager"
    "@mflevine/jupyterlab_html"
    # "@jupyterlab/latex"
)

########################################################################
# Basic environment configuration
########################################################################

PYTHON=/usr/local/bin/python3
PIP=/usr/local/bin/pip3
PIPDIR=~/.personal_pip_dir
PIP_ARGS=()
NODEJS=/usr/local/bin/node
JUPYTER=$PIPDIR/bin/jupyter

PATH=$PIPDIR/bin:$PATH

########################################################################
# Command-line options
########################################################################

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -U|--upgrade|upgrade)
            PIP_ARGS+=("--upgrade")
            UPGRADE=yes
            shift
            ;;
        -a|--arg)
            [ "$2" ] && PIP_ARGS+=("$2")
            shift
            shift
            ;;
        *)
            shift
            ;;
    esac
done

########################################################################
# Sanity checks
########################################################################

if [ ! -x "$PYTHON" ]; then
    echo ERROR: python3 not found
    echo Please excute \`brew install python\'
    exit
fi

if [ ! -x "$PIP" ]; then
    echo ERROR: pip3 not found
    echo Please excute \`brew install python\'
    exit
fi

if [ ! -x "$NODEJS" ]; then
    echo ERROR: node not found
    echo Please excute \`brew install node\'
    exit
fi

if [ -e "$PIPDIR" -a -z "$UPGRADE" ]; then
    echo WARNING: personal pip dir already exists
    echo If you want to resintall, please rename or delete \`~/.personal_pip_dir\'
    echo If you want to upgrade, please run \`brew pipsetup upgrade\'
    exit
fi

########################################################################
# Create basic directory structure and basic files
########################################################################

mkdir -p "$PIPDIR"
mkdir -p "$PIPDIR/bin"
mkdir -p "$PIPDIR/lib"
mkdir -p "$PIPDIR/share"

PYTHON_VER=`"$PYTHON" -c "import sys; print(sys.version[:3])"`

ln -f -s "/usr/local/bin/python3" "$PIPDIR/bin/python"
ln -f -s "/usr/local/bin/python3" "$PIPDIR/bin/python3"
ln -f -s "$PIPDIR/lib/python$PYTHON_VER" "$PIPDIR/lib/python"

for PIP_FILE in pip pip2 pip3; do
cat > "$PIPDIR/bin/$PIP_FILE" << 'EOF'
#!/bin/bash
echo No, you don\'t want to use pip directly.
echo Use: brew pip ...
echo To upgrade pip itself, use: brew pipsetup upgrade
EOF
chmod +x "$PIPDIR/bin/$PIP_FILE"
done

########################################################################
# Update Pip
########################################################################

"$PIP" install --upgrade pip

########################################################################
# Install python packages
########################################################################

export PYTHONPATH="$PIPDIR/lib/python/site-packages"

for PACK in "${PACKAGES[@]}"; do
    "$PIP" install \
        --prefix="$PIPDIR" \
        "${PIP_ARGS[@]}" \
        "$PACK"
done

########################################################################
# Install jupyter extensions
########################################################################

export JUPYTER_PATH=$PIPDIR/share/jupyter
export JUPYTERLAB_DIR=$PIPDIR/share/jupyter/lab

"$JUPYTER" nbextension     enable --py --sys-prefix widgetsnbextension
"$JUPYTER" nbextension     enable --py --sys-prefix appmode
"$JUPYTER" serverextension enable --py --sys-prefix appmode

for EXT in "${LABEXTENSIONS[@]}"; do
    "$JUPYTER" labextension install "$EXT"
done

########################################################################
# Patch sjk
########################################################################

for SJK_KER in singular mathematica; do
    SJK_SPEC="$PIPDIR/share/jupyter/kernels/sjk-$SJK_KER/kernel.json"
    if [ -f "$SJK_SPEC" ]; then
        mv -f "$SJK_SPEC" "$SJK_SPEC.disabled"
    fi
done

########################################################################
# Use GAP from sage
########################################################################

cat > "$PIPDIR/bin/gap" << 'EOF'
#!/bin/bash
sage -gap "$@"
EOF
chmod +x "$PIPDIR/bin/gap"

########################################################################
# Patch jupyter_kernel_singular
########################################################################

cat > "$PIPDIR/share/jupyter/kernels/singular/kernel.json" << 'EOF'
{
    "argv": [
        "python3",
        "-m", "jupyter_kernel_singular",
        "-f", "{connection_file}"
    ],
    "codemirror_mode": "singular",
    "display_name": "Singular",
    "language": "singular"
}
EOF
